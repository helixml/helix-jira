name: JIRA issues
description: ""
avatar: https://logowik.com/content/uploads/images/jira3124.jpg
image: https://www.ibm.com/content/dam/adobe-cms/case-studies/en/case-studies/alinma-bank/static/img1_1600w.component.xl-retina.ts=1716488498778.jpg/content/adobe-cms/us/en/case-studies/alinma-bank-websphere-liberty/jcr:content/root/leadspace_container/leadspace

assistants:
- apis:
  - name: JIRA issue search
    description: Search JIRA issues
    url: ${JIRA_HOSTNAME}
    schema: |
      openapi: 3.0.0
      info:
        title: Jira Cloud REST API
        description: The Jira Cloud REST API
        version: 1.0.0

      paths:
        /rest/api/3/search:
          get:
            summary: Search for issues using JQL (GET)
            description: Searches for issues using JQL.
            operationId: searchForIssuesUsingJql
            parameters:
              - name: jql
                in: query
                description: The JQL that defines the search
                schema:
                  type: string
              - name: startAt
                in: query
                description: The index of the first item to return in the page of results (page offset). The base index is 0.
                schema:
                  type: integer
                  default: 0
              - name: maxResults
                in: query
                description: The maximum number of items to return per page. The default is 50 and the maximum is 100.
                schema:
                  type: integer
                  default: 10
              - name: fields
                in: query
                description: A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list.
                schema:
                  type: array
                  items:
                    type: string
                    default: summary,comment
              - name: expand
                in: query
                description: Use expand to include additional information about issues in the response. This parameter accepts a comma-separated list.
                schema:
                  type: string
            responses:
              '200':
                description: Returned if the request is successful.
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SearchResults'

      components:
        schemas:
          SearchResults:
            type: object
            properties:
              expand:
                type: string
              startAt:
                type: integer
              maxResults:
                type: integer
              total:
                type: integer
              issues:
                type: array
                items:
                  $ref: '#/components/schemas/Issue'
          
          Issue:
            type: object
            properties:
              id:
                type: string
              key:
                type: string
              fields:
                $ref: '#/components/schemas/IssueFields'

          IssueFields:
            type: object
            additionalProperties: true
            description: Issue fields are dynamic and depend on the Jira instance configuration
    headers:
      Authorization: Basic ${AUTH_STRING}
    query: {}
    request_prep_template: ""
    response_success_template: ""
    response_error_template: ""
    model: ""

  # Other assistant properties
  name: ""
  description: ""
  avatar: ""
  image: ""
  provider: ""
  model: mixtral:instruct
  type: text
  system_prompt: ""
  rag_source_id: ""
  lora_id: ""
  knowledge: []
  is_actionable_template: ""
  gptscripts: []
  zapier: []

triggers: []
